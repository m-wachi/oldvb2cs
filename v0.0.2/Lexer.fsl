{

// Opens methods related to fslex.exe
open System
open FSharp.Text.Lexing

let lexeme = LexBuffer<_>.LexemeString

let newline (lexbuf: LexBuffer<_>) = 
  lexbuf.StartPos <- lexbuf.StartPos.NextLine

}

// Regular expressions
let whitespace = [' ' '\t' ]
let newline = ('\n' | '\r' '\n')
let digit = ['0'-'9']

rule tokenstream = 
  parse ['-']?digit+   { Parser.INT (Int32.Parse(lexeme lexbuf))}
      | ['a'-'z']+    { Parser.ID (lexeme lexbuf) } 
      | "="           { Parser.EQUAL }
      | "'"             { sts_comment lexbuf }
      | whitespace	{ tokenstream lexbuf }
      | newline	{ Parser.LINE_TERM }
      | _    		{ failwith ("ParseError" + LexBuffer<_>.LexemeString lexbuf) }
      | eof   	{ Parser.EOF }
and sts_comment =
  parse newline     { tokenstream lexbuf }
      | _*  { Parser.COMMENT ("cmnt") }
{

}